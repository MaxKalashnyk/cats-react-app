{"version":3,"sources":["SidebarItem/SidebarItem.js","catsData.js","App.js","serviceWorker.js","index.js","dog-paw.svg"],"names":["SidebarItem","props","react_default","a","createElement","className","href","role","onClick","click","data-index","index","name","catsData","id","catSrc","catName","catDescription","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentCat","catClickHandler","bind","assertThisInitialized","event","preventDefault","currentDataKey","parseInt","target","dataset","setState","_this2","catsLinkItems","map","cat","src_SidebarItem_SidebarItem","key","toString","src","logo","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"oQAWeA,EATK,SAACC,GACnB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,GAAGC,KAAK,SAASC,QAASP,EAAMQ,MAAOJ,UAAU,qBAAqBK,aAAYT,EAAMU,OAAQV,EAAMW,QCLzGC,EAAW,CACpB,CACEC,GAAI,EACJC,OAAQ,mBACRC,QAAS,iCACTC,eAAgB,swDAElB,CACIH,GAAI,EACJC,OAAQ,mBACRC,QAAS,iCACTC,eAAgB,kgEAEpB,CACIH,GAAI,EACJC,OAAQ,mBACRC,QAAS,2BACTC,eAAgB,k7DAEpB,CACIH,GAAI,EACJC,OAAQ,mBACRC,QAAS,uCACTC,eAAgB,2zDAEpB,CACIH,GAAI,EACJC,OAAQ,mBACRC,QAAS,uCACTC,eAAgB,42DCuCTC,qBA5Db,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMrB,KAIRyB,MAAQ,CACNb,SAAUA,EACVc,WAAY,GALZR,EAAKS,gBAAkBT,EAAKS,gBAAgBC,KAArBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAFNA,+EAUHY,GAEdA,EAAMC,iBACN,IAAMC,EAAiBC,SAASH,EAAMI,OAAOC,QAAQzB,OAErDW,KAAKe,SAAS,CACZV,WAAYM,qCAKP,IAAAK,EAAAhB,KAEDiB,EAAgBjB,KAAKI,MAAMb,SAAS2B,IAAI,SAAAC,GAC5C,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,CAAajC,MAAO6B,EAAKV,gBAAiBhB,KAAM6B,EAAIzB,QAASL,MAAO8B,EAAI3B,GAAI6B,IAAKF,EAAI3B,GAAG8B,eAGjG,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKyC,IAAKC,OAAMC,IAAI,UAAU1C,UAAU,uBACxCH,EAAAC,EAAAC,cAAA,kBACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,+EAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBkC,KAGrCrC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,WAASC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BiB,KAAKI,MAAMb,SAASS,KAAKI,MAAMC,YAAYX,SAC/Ed,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKyC,IAAKvB,KAAKI,MAAMb,SAASS,KAAKI,MAAMC,YAAYZ,OAAQgC,IAAI,MAAM1C,UAAU,2BACjFH,EAAAC,EAAAC,cAAA,kBACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBiB,KAAKI,MAAMb,SAASS,KAAKI,MAAMC,YAAYV,6BAjD/F+B,cCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.a6c4248d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst SidebarItem = (props) => {\r\n  return (\r\n    <li className='menu-content__item'>\r\n        <a href='' role='button' onClick={props.click} className='menu-content__link' data-index={props.index}>{props.name}</a>\r\n    </li>\r\n  )\r\n};\r\n\r\n\r\nexport default SidebarItem\r\n","export const catsData = [\r\n    {\r\n      id: 0,\r\n      catSrc: 'images/cat1.jpeg',\r\n      catName: 'Цезар',\r\n      catDescription: 'Віднедавна ця порода котів набула чималої популярності в Україні. Якщо раніше на вершині популярності були персидські коти, то зараз саме британський короткошерстий кіт став фаворитом. Це пояснюється як з практичної точки зору, так і з естетичної. Навіть просто переглядаючи фото британських короткошерстих котів можна побачити і першу і другу.'\r\n    },\r\n    {\r\n        id: 1,\r\n        catSrc: 'images/cat2.jpeg',\r\n        catName: 'Пушок',\r\n        catDescription: 'Коти породи Мейн-кун є воістину аборигенними тваринами Північної Америки, штату Мен. Через суворі умови тамтешньої зими Мейн-куни володіють густою шерстю та довгим пухнастим хвостом, які зігрівають цих котів навіть в найлютіші морози. А через дикі умови і великі снігові насипи взимку ці коти отримали міцні широкуваті лапи з пучками шерсті поміж пальцями, які роблять їх чудовими «снігоходами».'\r\n    },\r\n    {\r\n        id: 2,\r\n        catSrc: 'images/cat3.jpeg',\r\n        catName: 'Кузя',\r\n        catDescription: 'Тойгер виведений селекційним шляхом, в основу породи покладено Бенгальських котів. Завдяки спробам схрещування останніх з різними іншими породами, в результаті вдалося вивести кошенят із забарвлення тигра. Хоча основною ціллю було створення кота схожого більше на мультяшного героя, а не на великих диких тигрів, своїм смугастим забарвленням він все ж більше нагадує останніх.'\r\n    },\r\n    {\r\n        id: 3,\r\n        catSrc: 'images/cat4.jpeg',\r\n        catName: 'Марсик',\r\n        catDescription: 'Дорослі коти породи Турецький ван важать 6-9 кілограм, кішки трохи легші – від 4.5 до 6 кілограм. Довжина представників породи включно з хвостом може сягати від 90 до 120 сантиметрів, а висота – від 35 до 40 сантиметрів. Коти і кішки, а також улюбленці різного віку мають деякі розпізнавальні ознаки. Серед них – більш потужний кістяк, яким володіють коти, кішки ж більш «жіночні».'\r\n    },\r\n    {\r\n        id: 4,\r\n        catSrc: 'images/cat5.jpeg',\r\n        catName: 'Іриска',\r\n        catDescription: 'Колір шерсті сорель, як і дикий, є природним забарвлення для сомалійської породи котів. Сорель – це коли забарвлення сомалійського кота чи кішки мідно-червоного кольору, кінчики вух і хвіст – карі, а подушечки лап та носик – рожеві. Забарвлення шерсті фавн – це матово-кремовий колір, а срібне – срібно-голубий колір. Всі перераховані кольори шерсті визнані стандартом WCF.'\r\n    }\r\n  ];\r\n\r\n  export default catsData;","import React, { Component } from 'react';\nimport SidebarItem from './SidebarItem/SidebarItem';\nimport {catsData} from './catsData';\nimport {logo} from './dog-paw.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.catClickHandler = this.catClickHandler.bind(this);\n  }\n\n  state = {\n    catsData: catsData,\n    currentCat: 0\n  }\n\n  catClickHandler(event) {\n  \n    event.preventDefault();\n    const currentDataKey = parseInt(event.target.dataset.index);\n  \n    this.setState({\n      currentCat: currentDataKey\n    });\n\n  }\n\n  render() {\n\n    const catsLinkItems = this.state.catsData.map(cat => {\n      return <SidebarItem click={this.catClickHandler} name={cat.catName} index={cat.id} key={cat.id.toString()} />\n    });\n\n    return (\n      <div className=\"App\">\n        <aside className='main-sidebar'>\n            <figure>\n                <img src={logo} alt=\"cat-paw\" className=\"main-sidebar__logo\" />\n                <figcaption>\n                    <h2 className=\"main-sidebar__title\">Будинок котів</h2>\n                </figcaption>\n            </figure>\n            <nav className='main-sidebar__menu'>\n                <ul className='menu-content'>{catsLinkItems}</ul>\n            </nav>\n        </aside>\n         <main className=\"main-content\">\n            <section>\n                <article className=\"article-content\">\n                    <h3 className=\"article-content__title\">{this.state.catsData[this.state.currentCat].catName}</h3>\n                        <figure>\n                            <img src={this.state.catsData[this.state.currentCat].catSrc} alt=\"cat\" className=\"article-content__image\" />\n                            <figcaption>\n                                <p className=\"article-content__text\">{this.state.catsData[this.state.currentCat].catDescription}</p>\n                            </figcaption>\n                        </figure>\n                </article>\n            </section>\n        </main>\n      </div>\n    );\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dog-paw.30199f6b.svg\";"],"sourceRoot":""}